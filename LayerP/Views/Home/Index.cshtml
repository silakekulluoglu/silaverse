@using BusinessLayer.Dtos
@using BusinessLayer.Enums
@using System;
@using System.Text.Json;
@using System.Text.Json.Serialization;
@using System.Text.Json.Nodes

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@*model List<BusinessLayer.Dtos.ThingDto>*@

@model ViewDto

@{
    ViewData["Title"] = "Thingiverse";
    var perPage = Model.PerPage;
    var totalPages = Model.TotalPages;
    var currentPage = Model.CurrentPage;
    var searchTerm = ViewBag.searchTerm;
}

<link rel="stylesheet" href="~/css/popular.css" />


<section class="jumbotron text-center">
    <div class="reklam-alani">
        <h1 class="jumbotron-heading"></h1>
        <p class="lead text-muted"></p>
    </div>
</section>

<section>
    <form id="Filters" asp-action="PopularJson" method="get">
        <div class="container d-flex justify-content-center gap-5 things-page">
            <div class="filter-column">
                <select asp-for="Filters.PostedAfter" name="PostedAfter" class="form-select mainpage">
                    <option class="dropdown item" value=@Convert.ToInt32(PostedAfter.Last30Days)>Popular Last 30 Days</option>
                    <option class="dropdown item" value=@Convert.ToInt32(PostedAfter.Last7Days)>Popular Last 7 Days</option>
                    <option class="dropdown item" value=@Convert.ToInt32(PostedAfter.ThisYear)>Popular This Year</option>
                    <option class="dropdown item" value=@Convert.ToInt32(PostedAfter.AllTime)>Popular All Time</option>
                    <option class="dropdown item" value=@Convert.ToInt32(PostedAfter.Newest)>Newest</option>
                    <option class="dropdown item" value=@Convert.ToInt32(PostedAfter.Makes)>Most Makes</option>
                </select>

                <select asp-for="Filters.PostedAfter" name="PostedAfter" class="form-select searchpage" style="display: none;" disabled>
                    <option class="dropdown item" value=@Convert.ToInt32(PostedAfter.Relevant)>Relevant</option>
                    <option class="dropdown item" value=@Convert.ToInt32(PostedAfter.AllTime)>Popular</option>
                    <option class="dropdown item" value=@Convert.ToInt32(PostedAfter.Text)>Exact Text</option>
                    <option class="dropdown item" value=@Convert.ToInt32(PostedAfter.Newest)>Newest</option>
                    <option class="dropdown item" value=@Convert.ToInt32(PostedAfter.Makes)>Most Makes</option>
                </select>
            </div>

            
            <div class="filter-column">
                <select id="MainCategory" class="form-select" asp-for="Filters.MainCategory" name="MainCategory">
                    @foreach (BusinessLayer.Enums.MainCategoriesFilter filter in Enum.GetValues(typeof(BusinessLayer.Enums.MainCategoriesFilter)))
                    {
                        <option class="main-category" value=@Convert.ToInt32(filter)>@filter.ToString()</option>
                    }

                    <optgroup  id="subCategoriesGroup" >
                        @foreach (BusinessLayer.Enums.Category3DPrintingFilter filter in Enum.GetValues(typeof(BusinessLayer.Enums.Category3DPrintingFilter)))
                        {
                            <option class="sub-category" value=@Convert.ToInt32(filter) data-main-category="Category3DPrinting" style="display: none;">@filter.ToString()</option>
                        }
                        @foreach (BusinessLayer.Enums.CategoryArtFilter filter in Enum.GetValues(typeof(BusinessLayer.Enums.CategoryArtFilter)))
                        {
                            <option class="sub-category" value=@Convert.ToInt32(filter) data-main-category="CategoryArt" style="display: none;">@filter.ToString()</option>
                        }
                        @foreach (BusinessLayer.Enums.CategoryFashionFilter filter in Enum.GetValues(typeof(BusinessLayer.Enums.CategoryFashionFilter)))
                        {
                            <option class="sub-category" value=@Convert.ToInt32(filter) data-main-category="CategoryFashion" style="display: none;">@filter.ToString()</option>
                        }
                        @foreach (BusinessLayer.Enums.CategoryGadgetsFilter filter in Enum.GetValues(typeof(BusinessLayer.Enums.CategoryGadgetsFilter)))
                        {
                            <option class="sub-category" value=@Convert.ToInt32(filter) data-main-category="CategoryGadgets" style="display: none;">@filter.ToString()</option>
                        }
                        @foreach (BusinessLayer.Enums.CategoryHobbyFilter filter in Enum.GetValues(typeof(BusinessLayer.Enums.CategoryHobbyFilter)))
                        {
                            <option class="sub-category" value=@Convert.ToInt32(filter) data-main-category="CategoryHobby" style="display: none;">@filter.ToString()</option>
                        }
                        @foreach (BusinessLayer.Enums.CategoryHouseholdFilter filter in Enum.GetValues(typeof(BusinessLayer.Enums.CategoryHouseholdFilter)))
                        {
                            <option class="sub-category" value=@Convert.ToInt32(filter) data-main-category="CategoryHousehold" style="display: none;">@filter.ToString()</option>
                        }
                        @foreach (BusinessLayer.Enums.CategoryLearningFilter filter in Enum.GetValues(typeof(BusinessLayer.Enums.CategoryLearningFilter)))
                        {
                            <option class="sub-category" value=@Convert.ToInt32(filter) data-main-category="CategoryLearning" style="display: none;">@filter.ToString()</option>
                        }
                        @foreach (BusinessLayer.Enums.CategoryModelsFilter filter in Enum.GetValues(typeof(BusinessLayer.Enums.CategoryModelsFilter)))
                        {
                            <option class="sub-category" value=@Convert.ToInt32(filter) data-main-category="CategoryModels" style="display: none;">@filter.ToString()</option>
                        }
                        @foreach (BusinessLayer.Enums.CategoryToolsFilter filter in Enum.GetValues(typeof(BusinessLayer.Enums.CategoryToolsFilter)))
                        {
                            <option class="sub-category" value=@Convert.ToInt32(filter) data-main-category="CategoryTools" style="display: none;">@filter.ToString()</option>
                        }
                        @foreach (BusinessLayer.Enums.CategoryToysGamesFilter filter in Enum.GetValues(typeof(BusinessLayer.Enums.CategoryToysGamesFilter)))
                        {
                            <option class="sub-category" value=@Convert.ToInt32(filter) data-main-category="CategoryToysGames" style="display: none;">@filter.ToString()</option>
                        }
                    </optgroup>
                    
                </select>
            </div>

            
            <div class="filter-column">
                <button class="form-select" data-bs-toggle="dropdown" id="dropdownMenuFilterBy" aria-expanded="false">
                    Filter by
                </button>

                <ul class="dropdown-menu" aria-labelledby="dropdownMenuFilterBy">
                    <li>
                        <div class="education">
                            <label asp-for="Filters.IsEdu">
                                <input type="checkbox" id="IsEduFilter" name="IsEdu" value=1>
                                Educational Only
                            </label><br>

                            <select class="multiples" asp-for="Filters.Subjects" name="Subjects" multiple>
                                @foreach (BusinessLayer.Enums.SubjectFilter filter in Enum.GetValues(typeof(BusinessLayer.Enums.SubjectFilter)))
                                {
                                    <option id="SubjectsFilter" value="@Convert.ToInt32(filter)">@filter.ToString()</option>
                                }
                            </select>

                            <select class="multiples" asp-for="Filters.GradeLevels" name="GradeLevels" multiple>
                                @foreach (BusinessLayer.Enums.GradeLevelFilter filter in Enum.GetValues(typeof(BusinessLayer.Enums.GradeLevelFilter)))
                                {
                                    <option id="GradeLevelsFilter" value="@Convert.ToInt32(filter)">@filter.ToString()</option>
                                }
                            </select>

                            <select class="multiples" asp-for="Filters.Standards" name="Standards" multiple>
                                @foreach (BusinessLayer.Enums.StandardFilter filter in Enum.GetValues(typeof(BusinessLayer.Enums.StandardFilter)))
                                {
                                    <option id="StandardsFilter" value="@Convert.ToInt32(filter)">@filter.ToString()</option>
                                }
                            </select>
                        </div>
                    </li>

                    <li>
                        <select class="form-select btn" asp-for="Filters.License" name="License">
                            @foreach (BusinessLayer.Enums.LicenseFilter filter in Enum.GetValues(typeof(BusinessLayer.Enums.LicenseFilter)))
                            {
                                <option value=@Convert.ToInt32(filter)>@filter</option>
                            }
                        </select><br>

                    </li>

                    <li>
                        <label asp-for="Filters.Customizable">
                            <input type="checkbox" id="CustomizableFilter" name="Customizable" value=1
                            @(Model.Filters.Customizable == 1 ? "checked" : "")>
                            Customizable
                        </label><br>

                        <label asp-for="Filters.ShowCustomizedCreations">
                            <input type="checkbox" id="ShowCustomizedCreationsFilter" name="ShowCustomizedCreations" value=1
                            @(Model.Filters.ShowCustomizedCreations == 1 ? "checked" : "")>
                            Show Customized Creations
                        </label><br>

                        <label asp-for="Filters.OrderPrint">
                            <input type="checkbox" id="OrderPrintFilter" name="OrderPrint" value=1
                            @(Model.Filters.OrderPrint == 1 ? "checked" : "")>
                            Order a Print
                        </label><br>

                        <label asp-for="Filters.HasMakes">
                            <input type="checkbox" id="HasMakesFilter" name="HasMakes" value=1
                            @(Model.Filters.HasMakes == 1 ? "checked" : "")>
                            Has Makes
                        </label><br>

                        <label asp-for="Filters.IsFeatured">
                            <input type="checkbox" id="IsFeaturedFilter" name="IsFeatured" value=1
                            @(Model.Filters.IsFeatured == 1 ? "checked" : "")>
                            Featured
                        </label><br>

                        <label asp-for="Filters.IsChallangeWinner">
                            <input type="checkbox" id="IsChallangeWinnerFilter" name="IsChallangeWinner" value=1
                            @(Model.Filters.IsChallangeWinner == 1 ? "checked" : "")>
                            Challange Winner
                        </label><br>

                        <label asp-for="Filters.IsDerivative">
                            <input type="checkbox" id="IsDerivativeFilter" name="IsDerivative" value=1
                            @(Model.Filters.IsDerivative == 1 ? "checked" : "")>
                            Is a Remix
                        </label><br>
                    </li>
                </ul>
            </div>
        </div>
    </form>
</section>

<section id="content">
    @Html.Partial("~/Views/Shared/_Things.cshtml", Model)
</section>


<nav aria-label="Page navigation" class="custom-pagination">
    <ul class="pagination">
        @if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", "Home", new { page = 1 })">&laquo;</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", "Home", new { page = currentPage - 1 })">&laquo;</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">&laquo;</span>
            </li>

            <li class="page-item disabled">
                <span class="page-link">&laquo;</span>
            </li>
        }

        @if (currentPage == 1 || currentPage == 2)
        {
            for (int i = 1; i <= 5 && i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", "Home", new { page = i })">@i</a>
                </li>
            }
        }
        else
        {
            for (int i = currentPage - 2; i <= currentPage + 2 && i <= totalPages; i++)
            {
                if (i > 0)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", "Home", new { page = i })">@i</a>
                    </li>
                }
            }
        }

        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", "Home", new { page = currentPage + 1 })">&raquo;</a>
            </li>

            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", "Home", new { page = totalPages })">&raquo;</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">&raquo;</span>
            </li>

            <li class="page-item disabled">
                <span class="page-link">&raquo;</span>
            </li>
        }
    </ul>
</nav>



@section Scripts {
    <script src="~/js/site.js"></script>
}

